(()=>{"use strict";const t={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let n;const i=new Uint8Array(16);function e(){if(!n&&(n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!n))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return n(i)}const s=[];for(let t=0;t<256;++t)s.push((t+256).toString(16).slice(1));const o=function(n,i,o){if(t.randomUUID&&!i&&!n)return t.randomUUID();const r=(n=n||{}).random||(n.rng||e)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,i){o=o||0;for(let t=0;t<16;++t)i[o+t]=r[t];return i}return function(t,n=0){return(s[t[n+0]]+s[t[n+1]]+s[t[n+2]]+s[t[n+3]]+"-"+s[t[n+4]]+s[t[n+5]]+"-"+s[t[n+6]]+s[t[n+7]]+"-"+s[t[n+8]]+s[t[n+9]]+"-"+s[t[n+10]]+s[t[n+11]]+s[t[n+12]]+s[t[n+13]]+s[t[n+14]]+s[t[n+15]]).toLowerCase()}(r)};class r{constructor(){this.stack=new Array}update(){const t=this.getCurrentState();null!=t&&t()}popState(){return this.stack.pop()}pushState(t){this.getCurrentState()!=t&&this.stack.push(t)}getCurrentState(){return this.stack.length>0?this.stack[this.stack.length-1]:null}}const a=(t,n,i=1e-8)=>Math.abs(t-n)<i;class h{constructor(...t){this.components=t}get x(){return this.components[0]}get y(){return this.components[1]}add({components:t}){const n=t.map(((t,n)=>this.components[n]+t));return new h(...n)}subtract({components:t}){return new h(...t.map(((t,n)=>this.components[n]-t)))}scaleBy(t){return new h(...this.components.map((n=>n*t)))}length(){return Math.hypot(...this.components)}dotProduct({components:t}){return t.reduce(((t,n,i)=>t+n*this.components[i]),0)}normalize(){return this.scaleBy(1/this.length())}haveSameDirectionWith(t){const n=this.normalize().dotProduct(t.normalize());return a(n,1)}haveOppositeDirectionTo(t){const n=this.normalize().dotProduct(t.normalize());return a(n,-1)}isPerpendicularTo(t){const n=this.normalize().dotProduct(t.normalize());return a(n,0)}angleBetween(t){return 180*Math.acos(this.dotProduct(t)/(this.length()*t.length()))/Math.PI}negate(){return this.scaleBy(-1)}projectOn(t){const n=t.normalize();return n.scaleBy(this.dotProduct(n))}withLength(t){return this.normalize().scaleBy(t)}equalTo({components:t}){return t.every(((t,n)=>a(t,this.components[n])))}}class c{constructor(t,n,i){this.id=o(),this.position=new h(t,n),this.velocity=new h(0,0),this.brain=new r,this.home=i,this.target=null}moveBasedOnVelocity(){if(!this.velocity.length())return;const t=Math.sqrt(Math.pow(this.velocity.x,2)+Math.pow(this.velocity.y,2)),n=this.velocity.x/t||0,i=this.velocity.y/t||0,e=this.position.add(new h(n,i));this.position=e}findLeaf(){window.GAME.leafs.length?((t=>{(!this.target||this.target&&!t.find((t=>t.id===this.target.id)))&&(this.target=(t=>t[Math.floor(Math.random()*t.length)])(t))})(window.GAME.leafs),this.velocity=this.target.position.subtract(this.position),this.target.position.subtract(this.position).length()<1&&(window.GAME.leafs=window.GAME.leafs.filter((t=>t.id!==this.target.id)),this.brain.pushState(this.goHome.bind(this)))):this.velocity=new h(0,0)}goHome(){this.velocity=this.position.subtract(this.home.position).negate(),this.position.subtract(this.home.position).length()<1&&this.brain.popState()}stop(){}update(){this.brain.getCurrentState()||this.brain.pushState(this.findLeaf.bind(this)),this.brain.update(),this.moveBasedOnVelocity()}}class l{constructor(t,n){this.id=o(),this.position=new h(t,n),this.velocity=new h(0,0),this.brain=new r}}class d{constructor(t,n){this.id=o(),this.position=new h(t,n),this.velocity=new h(0,0),this.brain=new r}}const p=new class{constructor(){this.canvas=document.getElementById("canvas"),this.ctx=canvas.getContext("2d"),this.ctx.fillStyle="grey",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}clearCanvas(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="grey",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}draw(t,n,i,e){this.ctx.beginPath(),this.ctx.arc(t,n,i,0,2*Math.PI),this.ctx.fillStyle=e,this.ctx.fill()}drawAnts(){window.GAME.ants.forEach((t=>this.draw(t.position.x,t.position.y,2,"black")))}drawHomes(){window.GAME.homes.forEach((t=>this.draw(t.position.x,t.position.y,30,"black")))}drawLeafs(){window.GAME.leafs.forEach((t=>this.draw(t.position.x,t.position.y,5,"green")))}drawFrame(){this.clearCanvas(),this.drawHomes(),this.drawAnts(),this.drawLeafs()}};(new class{init(){const t=document.getElementById("canvas");t.addEventListener("click",(function(n){var i=n.clientX-t.offsetLeft,e=n.clientY-t.offsetTop;window.GAME.leafs.push(new d(i,e))}))}}).init();const u=new l(10,10),w=new l(500,500),m=new c(u.position.x,u.position.y,u),y=new c(u.position.x,u.position.y,u),g=new c(u.position.x,u.position.y,u),f=new c(w.position.x,w.position.y,w),v=new c(w.position.x,w.position.y,w);window.GAME={homes:[u,w],ants:[m,y,g,f,v],leafs:[new d(150,150),new d(200,200),new d(300,100),new d(400,50),new d(120,10),new d(700,120),new d(80,680),new d(900,100)]};const b=setInterval((()=>{p.drawFrame(),window.GAME.ants.forEach((t=>t.update())),window.GAME.leafs.length||clearTimeout(b)}),60)})();